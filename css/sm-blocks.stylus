/**
* widgets
*/
#sm-products
	// {{{
	// don't modify if not sure
	display: flex
	box-sizing: border-box
	flex-direction: column // just in case
	align-items: center // grid is centered, not stretched
	min-width:  0 // may zap into zero-point
	min-height: 0 // same
	width:      100% // eat all width
	height:     auto // grid will grow/shrink automatically
	overflow: hidden // no scrollbars please
	margin:  0
	padding: 1em 0 1em 0
	background-color: alpha(ghostwhite, 0.4)
	> .main
		// settings {{{
		// configurable defaults
		--columns: 4
		--column-gap: 4px
		--row-gap:    4px
		--item-max-x: 304px
		--item-max-y: 640px
		--item-sz-1: 35
		--item-sz-2: 40
		--item-sz-3: 25
		--font-size: 20px
		--font-size-header: calc(var(--font-size) + 4px)
		// non-configurable
		--rows: 1
		--height: calc(var(--rows) * var(--item-max-y))
		--svg-icon-size: calc(10px + var(--font-size))
		// }}}
		// guards {{{
		div, input, svg, img
			box-sizing: border-box
			padding: 0
			margin:  0
		// }}}
		// container setup
		display: grid
		box-sizing: border-box
		grid-template-columns: repeat(var(--columns), 1fr)
		grid-column-gap: var(--column-gap)
		grid-row-gap: var(--row-gap)
		justify-content: center
		background-color: alpha(ghostwhite, 0.6)
		margin:  0
		padding: 0
		////
		// size & visibility {{{
		width:  100%
		height: var(--height)
		max-width:  calc(var(--columns) * var(--item-max-x))
		max-height: calc(var(--rows) * var(--item-max-y))
		opacity: 0
		pointer-events: none
		&.v
			opacity: 1
			pointer-events: auto
		// }}}
		> .item // vertical {{{
			width:  100%
			height: 100%
			display: flex
			justify-content: center
			> .box
			{
				width:  100%
				height: 100%
				min-width:  0
				min-height: 0
				display: flex
				flex-direction: column
				align-items: stretch
				justify-content: flex-start
				max-width:  var(--item-max-x)
				max-height: var(--item-max-y)
				// data is placed into this block,
				// it displays svg placeholder by default
				.ph
				{
					// {{{
					position: relative;
					> *
					{
						position: absolute;
						left: 0;
						top:  0;
						width:  100%;
						height: 100%;
					}
					> div
					{
						display: none;
					}
					> svg
					{
						// scaling mode must be defined in the svg
						// default color is black
					}
					&.loaded
					{
						// state is determined,
						// placeholder must be hidden
						> div
						{
							display: flex;
						}
						> svg
						{
							display: none;
						}
					}
					// }}}
				}
				// item is divided into 3 sections and
				// those sections may also be divided..
				> div
				{
					flex-shrink: 100;
					display: flex;
					flex-direction: column;// always!
					> div
					{
						flex-grow:   100;
						flex-shrink: 100;
						display: flex;
					}
				}
				> .head // image
				{
					flex-grow: var(--item-sz-1);
					> div
					{
						flex-direction: column;
						align-items: stretch;
						justify-content: center;
						> img
						{
							max-width:  100%;
							max-height: 100%;
						}
					}
				}
				> .body
				{
					flex-grow: var(--item-sz-2);
					> .icon // {{{
					{
						// this is intended to be one-liner
						max-height: calc(2 * var(--font-size-header));
						display: flex;
						> .a
						{
							flex: 1 1 30%;
						}
						> .b
						{
							flex: 1 1 70%;
						}
					}
					// }}}
					> .title // {{{
					{
						// This block is fixed at top space it may take.
						// The multiplier to header size should be +1 from
						//  the desired number of lines, the default is 3,
						//  which means that 2 lines will display perfectly fine.
						// The plugin script auto-breaks titles,
						//  this is done via special markers in the block's
						//  content data. Markers are natural, like " | " or " . ",
						//  it will replace it with line break for
						//  the perfect text fit.
						max-height: calc(3 * var(--font-size-header));
						> div, > div > button // TODO: kind of merging should be removed?
						{
							display: flex;
							align-items: center;
							justify-content: center;
							font-weight: bold;
							font-size: var(--font-size-header);// auto-controlled
							line-height: 1;
							text-align: center;
							word-break: keep-all;// +to break-word Asian languages
							overflow: hidden;
						}
					}
					// }}}
					> .features // {{{
					{
					}
					// }}}
				}
				> .foot
				{
					flex-grow: var(--item-sz-3);
					> .price // {{{
					{
						max-height: calc(3 * var(--font-size));
						font-size: var(--font-size-header);
						> div
						{
							flex-direction: column;
							align-items: center;
							justify-content: center;
							> .old
							{
								display: none;
								line-height: 0.65em;
								opacity: 0.7;
								> span
								{
									text-decoration: line-through;
									font-size: 0.65em;
								}
							}
							> .current
							{
								display: flex;
								line-height: 0.9em;
								> .currency
								{
									font-size: 1em;
									padding-right: 0.2em;
								}
								> .value
								{
									font-size: 1em;
									font-weight: bold;
								}
								> .mantissa
								{
									font-size: 0.7em;
									padding-top: 0.1em;
									display: flex;
								}
							}
							// states
							&.none // no price specified
							{
								display: none;
							}
							&.higher // current > old
							{
							}
							&.lower  // current < old
							{
								> .old {display: block;}
							}
							&.right  // currency sign position
							{
								> .current > .currency
								{
									order: 2;
									padding-left: 0.2em;
									padding-right: 0;
								}
							}
						}
					}
					// }}}
					> .controls // {{{
					{
						max-height: calc(3 * var(--font-size));
						> div
						{
							padding-left:  4px;
							padding-right: 4px;
							a, button // buttons
							{
								flex: 1 1 auto;
								display: flex;
								align-items: center;
								justify-content: center;
								padding: 0;
								font-size: var(--font-size);
								font-weight: bold;
								border-width: 0;
								border-style: solid;
								border-color: slategray;
								border-radius: 2px;
								background-color: gainsboro;
								color: black;
								outline: 0;
								cursor: pointer;
								&:focus
								{
									border-width: 1px;
									background-color: silver;
								}
								&:hover
								{
									background-color: silver;
								}
							}
							.cart
							{
								// limited width
								max-width: calc(30px + var(--svg-icon-size));
								> svg
								{
									width: var(--svg-icon-size);
									height: auto;
									fill: black;
								}
								&.none // out of stock
								{
									display: none;
								}
							}
						}
					}
					// }}}
				}
			}
			&.empty // no data
			{
				// in case of instant layout change,
				// element have to take space.
				> .box
				{
					// display a small border
					border-style: solid;
					border-color: gainsboro;
					border-width: 1px;
					//border-right-width:  1px;
					//border-bottom-width: 1px;
					> div
					{
						// don't display anything else
						display: none;
					}
				}
			}
		// }}}
		&.x > .item // horizontal {{{
			> .box
			{
				flex-direction: row;
				max-width:  100%;
				max-height: var(--item-max-x);
				.ph
				{
					max-height: 100%;
				}
				> .image
				{
					max-width:  var(--item-max-x);
					max-height: 100%;
				}
				> .controls
				{
					max-width:  calc(1.5 * var(--item-C));
					max-height: 100%;
				}
			}
		// }}}
// }}}
div.sm-category-filter
	// {{{
	display: flex;
	flex-direction: column;
	////
	> .title
	{
		display: flex;
		> h3
		{
			flex: 1 1 0;
			font-size: 36px;
			font-weight: 700;
			margin: 0;
		}
		> .arrow
		{
		}
	}
	> hr
	{
		height: 1px;
		margin: 0;
		color: lightgray;
	}
	> .section // root
	{
		padding-top:    4px;
		padding-bottom: 4px;
		padding-left:   4px;
		padding-right:  0;
		.item
		{
			> .name // {{{
			{
				padding-top:    0;
				padding-bottom: 0;
				display: flex;
				flex-direction: row;
				> div
				{
					display: flex;
					flex-direction: row;
					align-items: center;
				}
				> .box // {{{
				{
					flex: 1 1 0;
					min-width: 0;
					padding-top:    8px;
					padding-bottom: 8px;
					cursor: pointer;
					> input // always hidden, used for focusing
					{
						flex: 0 0 0;
						width: 0;
						height: 0;
						min-width: 0;
						min-height: 0;
						margin: 0;
						padding: 0;
						border-style: none;
						border-width: 0;
						opacity: 0;
						//min-width: 20px;
						//min-height: 20px;
						position: static;
						outline: none;
						&:focus ~ .check
						{
							border-width: 2px;
						}
					}
					> .check // box
					{
						flex: 0 0 0;
						min-width:  20px;
						min-height: 20px;
						border: 1px solid slategray;
						border-radius: 2px;
						background-color: white;
						position: relative;
						> svg
						{
							position: absolute;
							top:  0;
							left: 0;
							width:  100%;
							height: 100%;
							opacity: 0;
							fill: white;
							stroke: silver;
						}
						&.checked
						{
							> svg:nth-child(1) {
								opacity: 1;
							}
							background-color: black;
						}
						&.indeterminated
						{
							> svg:nth-child(2) {
								opacity: 1;
							}
							background-color: black;
						}
						&.disabled
						{
							background-color: gainsboro;
						}
					}
					> label
					{
						flex: 1 1 0;
						padding-top:    1px;
						padding-bottom: 0;
						padding-left:   8px;
						padding-right:  0;
						min-width: 0;
						margin: 0;
						line-height: 1;
						white-space: nowrap;
						overflow: hidden;
						text-overflow: ellipsis;
						cursor: pointer;
						user-select: none;
						font-weight: normal;
						color: black;
					}
					&:hover
					{
						padding-left: 1px;
						> .check
						{
							border-width: 2px;
						}
					}
				}
				// }}}
				> .count // {{{
				{
					flex: 0 0 auto;
					white-space: nowrap;
				}
				// }}}
				> .arrow // {{{
				{
					flex: 1 1 0;
					min-width: 20px;
					max-width: 48px;
					justify-content: flex-end;
					cursor: pointer;
					> svg
					{
						width:  auto;
						height: 100%;
						max-height: 24px;
						transform: rotate(90deg);
						fill: silver;
						stroke: black;
					}
					&:hover > svg
					{
						fill: black;
						stroke: silver;
					}
					&.opened
					{
						> svg
						{
							transform: rotate(0deg);
							fill: black;
						}
					}
				}
				// }}}
			}
			// }}}
			> .section // {{{
			{
				display: none;
				opacity: 0;
				padding-left: 20px;
				&.opened
				{
					display: block;
					opacity: 1;
				}
			}
			// }}}
		}
	}
	&.inactive
	{
		pointer-events: none;
		//opacity: 0.5;
		svg {
			opacity: 0.4;
		}
		.item > .name > .box > .check
		{
			background-color: gainsboro;
		}
	}
	// guards
	div, hr, input, label
	{
		box-sizing: border-box;
		margin:  0;
		padding: 0;
	}
// }}}
div.sm-paginator
	// {{{
	// configuration
	--height:     48px
	--width:      calc(1.35 * var(--height))
	--font-size:  calc(0.35 * var(--height))
	// container
	display: flex
	flex-direction: row
	align-items: stretch
	justify-content: center
	position: relative
	overflow: hidden
	box-sizing: border-box
	min-width:  0
	min-height: 0
	width:   100%
	height:  calc(8px + var(--height))
	margin:  0
	padding: 0
	// content
	> div
		flex: 0 0 auto
		display: flex
		flex-direction: row
		overflow: hidden
		box-sizing: border-box
		padding: 0
		margin:  0
		touch-action: none
		// size and visibility {{{
		// these are for maximal size calculation
		min-width: 0
		max-width: 10000px
		width:     auto
		// non-visible by default
		opacity: 0
		background-color: alpha(ghostwhite, 0.6)
		&.v
			opacity: 1
			&.flexy
				width: 100%
				> .range
					width:     100%
					max-width: 100%
					&.nogaps > .page
						flex-grow: 1
		// }}}
		> div // {{{
			display: flex
			flex-direction: row
			font-size: var(--font-size)
			padding: 0
			margin:  0
			button
				display: flex
				align-items: center
				justify-content: center
				width:   100%
				height:  100%
				padding: 0
				margin:  0
				line-height: 0
				white-space: nowrap
				font-size: 1em
				font-weight: bold
				text-decoration: none
				border-width: 1px
				border-style: solid
				border-color: silver
				border-radius: 2px
				background-color: gainsboro
				box-shadow: inset 0 0 10px 0 silver
				color: black
				outline: 0
				cursor: pointer
				touch-action: none // pointer events only
				&:hover
					border-color: darkslategray
					color: slategray
					font-weight: bolder
				&:active,
				&:focus
					background-color: silver
					border-color: darkslategray
					color: slategray
					font-weight: bolder
					box-shadow: inset 0 0 0 1px white
			svg
				width:  100%
				height: 100%
		// }}}
		> .goto // {{{
			flex: 1 1 0
			max-width: calc(2px + var(--width))
			padding-top:    4px
			padding-bottom: 4px
			> button > svg
				fill: slategray
			// variants
			&.prev
				padding-left: 2px
			&.next
				padding-right: 2px
			// captured movement
			&.fast
				padding-top:    2px
				padding-bottom: 2px
				> button
					border-width: 1px
					background-color: black
					padding: 4px
					> svg
						fill: white
		// }}}
		> .sep // {{{
			max-width: 8px
			padding-top:    2px
			padding-bottom: 2px
			> svg
				fill: silver
			// variants
			&.first
				padding-left: 0
			&.last
				padding-right: 0
		// }}}
		> .range // {{{
			////
			--count: 0
			--max-width: calc(2px + (1 + var(--count)) * var(--width))
			--page-size: var(--width)
			////
			flex: 1 0 0
			justify-content: center
			min-width: 0
			max-width: var(--max-width)
			width:     10000px
			// states {{{
			&.nogaps
				// range without gaps
				// reduced size
				--max-width: calc(2px + var(--count) * var(--width))
				// dragging is not possible
				> .page.current > button
					cursor: default
			&.active.drag
				// current page is being dragged
				cursor: grabbing
			// }}}
			> .gap // {{{
				flex: 0 100 0
				min-width: calc(0.25 * var(--width))
				padding: 4px 0 4px 0
				// non-visible by default
				display: none
				&.v
					display: flex
				> svg
					fill: silver
			// }}}
			> .page // {{{
				flex: 0 0 0
				overflow: hidden
				min-width: var(--page-size)
				padding-top:    4px
				padding-bottom: 4px
				padding-left:   1px
				padding-right:  1px
				// non-visible by default
				display: none
				&.v
					display: flex
				// selected page
				&.current
					min-width: calc(2px + var(--page-size))
					padding-top:    2px
					padding-bottom: 2px
					> button
						font-size: 1.4em
						border-color: black
						background-color: black
						color: white
						cursor: grab
						&:hover
							color: lightslategray
						&:active,
						&:focus
							box-shadow: inset 0 0 1px 1px white
			// }}}
		// }}}
		////
		&.flexy // {{{
			> .range
				> .gap
					padding: 4px 1px 4px 1px
					> svg
						fill: gainsboro
				&.active > .gap
					> svg
						fill: silver
		// }}}
		&.hovered // {{{
			> .sep
				max-width: 8px
				> svg
					fill: slategray
		// }}}
		&.locked // {{{
			// intermediate state of the widget,
			// it will be intitialized soon
			opacity: 0.8
			pointer-events: none
			> .goto > button > svg
				fill: rgba(0, 0, 0, 0)
			> .range > .page > button
				color: rgba(0, 0, 0, 0)
		// }}}
		&.nosep // {{{
			> .goto.prev
				padding-right: 1px
			> .goto.next
				padding-left: 1px
		// }}}
	////
	// placeholder
	> svg
		display: none
		position: absolute
		box-sizing: border-box
		top:  0
		left: 0
		width:  100%
		height: 100%
		padding: 4px 8px 4px 8px
		margin: 0
		stroke: gainsboro
		fill: gainsboro
	// initial state
	&.inactive
		pointer-events: none
		> div
			display: none
		> svg
			display: block
	// guards
	div, button, svg
		box-sizing: border-box
// }}}
div.sm-orderer
	// {{{
	// settings {{{
	--height:    48px
	--font-size: calc(0.35 * var(--height))
	// }}}
	// guards {{{
	div, button, svg, select
		box-sizing: border-box
		padding: 0
		margin:  0
	// }}}
	// container
	box-sizing: border-box
	width:   100%
	height:  calc(8px + var(--height))
	margin:  0
	padding: 4px 0 4px 0
	background-color: alpha(ghostwhite, 0.6)
	// content
	> div
		position: relative
		// size and visibility {{{
		min-width:  0
		min-height: 0
		width:      100%
		height:     100%
		pointer-events: none
		&.v
			pointer-events: auto
			> .variant
				opacity: 1
			&.hovered
				> select
					border-color: darkslategray
		// }}}
		> .variant // {{{
			opacity: 0
			position: absolute
			width:  auto
			height: 100%
			&.left
				top:  0
				left: 0
				padding-top:    4px
				padding-bottom: 4px
				padding-left:   1px
				padding-right:  0
			&.right
				top:   0
				right: 0
				padding-top:    4px
				padding-bottom: 4px
				padding-left:   0
				padding-right:  1px
			&.a
				pointer-events: none
				&.left > button > svg
					transform: rotate(-90deg)
				&.right > button > svg
					transform: rotate(90deg)
			&.b
				> button > svg
					transform: rotate(0deg)
			&.c
				&.left > button > svg
					transform: rotate(-180deg)
				&.right > button > svg
					transform: rotate(180deg)
			////
			> button
				width:  var(--height)
				height: 100%
				background-color: transparent
				outline: 0
				cursor: pointer
				padding-left:  4px
				padding-right: 4px
				> svg
					display: block
					width:  100%
					height: 100%
					stroke-width: 1
					fill: slategray
					stroke: darkslategray
				&:hover,
				&:active,
				&:focus
					> svg
						fill: black
						stroke: slategray
		// }}}
		> select // {{{
			-webkit-appearance: none
			-moz-appearance: none
			appearance: none
			display: block
			width:  100%
			height: 100%
			font-size: var(--font-size)
			font-weight: bold
			text-align: left
			text-overflow: ellipsis
			white-space: nowrap
			overflow: hidden
			border: 1px solid silver
			border-radius: 2px
			background-color: gainsboro
			box-shadow: inset 0 0 10px 0 silver
			color: darkslategray
			outline: none
			cursor: pointer
			&.left
				padding-left:  calc(2px + var(--height))
				padding-right: var(--font-size)
			&.right
				padding-left:  var(--font-size)
				padding-right: calc(2px + var(--height))
			&.left.right
				padding-left:  calc(2px + var(--height))
				text-align: center
			////
			> option
				font-weight: bold
				background-color: gainsboro
				&:checked
					color: silver
				&:hover
					background-color: black
					color: white
			////
			&:hover
				color black
			&:focus
				color: black
				background-color: silver
				border-color: darkslategray
				box-shadow: inset 0 0 0 1px white
			&:-ms-expand
				display: none
			/***
			&:disabled
				color: graytext
				background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22graytext%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),
					linear-gradient(to bottom, #ffffff 0%,#e5e5e5 100%)
				&:hover
					border-color: #aaa
			/***/
		// }}}
// }}}

