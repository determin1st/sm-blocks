/**
* storefront modern blocks
*/
// font shortcuts {{{
WebSafeFontSans = Verdana, Arial, sans-serif
WebSafeFontMono = Consolas, Courier, monospace
// }}}
// ===
.sm-blocks // {{{
	// common config
	--height:    48px // fixed axis size (vertical by default)
	--font-size: calc(0.35 * var(--height))
	// root
	position:   relative
	box-sizing: border-box
	min-width:  0
	min-height: 0
	padding:    0
	margin:     0
	//overflow:   hidden
	font-size:  var(--font-size)
	// common controls/combinations
	// {{{
	div,button,select,input,label,svg,img,hr,h1,h2,h3
		box-sizing: border-box
		min-width:  0
		min-height: 0
		margin:  0
		padding: 0
		outline: 0
		border:  0
		background-color: transparent
	button,input,optgroup,select,textarea,label,h3
		font-family: inherit
		font-size:   1em
		font-weight: bold
		line-height: 1
		outline:     0
		text-transform:  none
		text-decoration: none
		// text overflow block
		text-overflow: ellipsis
		overflow:      hidden
		white-space:   nowrap
		word-break:    break-all
		overflow-wrap: anywhere // modern word-break
	svg
		width:  100%
		height: 100%
	button
		cursor: pointer
		color:  transparent
		> svg
			fill:   transparent
			stroke: transparent
	// }}}
	// rootBox
	> div
		overflow: hidden
		min-width:  0
		min-height: 0
		pointer-events: none
		opacity: 0
	// placeholder
	> svg
		display:  block
		position: absolute
		top:    0
		left:   0
		width:  100%
		height: 100%
		fill:   alpha(silver, 0.2)
	// constructed state
	&.v
		> div
			opacity: 0.6
			// functional state
			&.v
				pointer-events: auto
				opacity: 1
		> svg
			display: none
		// focused state
		&.f
			> div.v
				box-shadow: inset 0px 0px 8px 1px alpha(slateblue, 0.25)
				border-radius: 2px
// }}}
.sm-blocks.main-section // {{{
	// root
	width:  100%
	height: auto
	padding: 0 0 4px 0
	// content
	.item // {{{
		//=== DISABLED
		//=== CLOSED {{{
		> .title
			position: relative
			display: flex
			flex-direction: row
			height: 2em
			padding: 0.1em 0 0.1em 0
			> h3
				flex: 1 1 0
				order: 1
				font-family: WebSafeFontSans
				font-size: 1em
				font-weight: bold
				//font-weight: bold
				display: flex
				align-items: center
				color: slategray
				background-color: transparent
				border-radius: 4px
				cursor: pointer
				user-select: none
				> label
					cursor: pointer
			> button
				background-color: transparent
				display: none
				&.v
					display: block
				&.arrow
					flex: 0 0 0
					order: 2
					min-width: 2.8em
					padding: 0.1em 0.1em 0.1em 1.1em
					height: 100%
					background-color: transparent
					border-radius: 4px
					> svg
						fill: silver
						stroke: slategray
						> .a
							transform-origin: 50% 50%
							transform: rotate(90deg)
		> .section
			width: 100%
			min-height: 0
			overflow: hidden
			////
			display: none
			height:  0
			opacity: 0
		// }}}
		//=== OPENED {{{
		&.opened
			> .title > button.arrow
				> svg
					fill: slategray
					stroke: silver
					> .a
						transform: rotate(0deg)
			> .section
				display: block
				height:  auto
				opacity: 1
		// }}}
		//=== ENABLED
		&.v
			//=== CLOSED {{{
			&.hovered
				> .title
					> h3.h
						color: darkslategray
					> h3
						background-color: alpha(lightslategray, 0.04)
					> button.arrow.h
						background-color: alpha(lightslategray, 0.04)
						> svg
							fill: darkslategray
							stroke: gainsboro
			&.focused
				> .title
					> h3.f
						color: darkslateblue
					> h3
						background-color: alpha(mediumslateblue, 0.04)
					> button.arrow.f
						background-color: alpha(mediumslateblue, 0.04)
						> svg
							fill: slateblue
							stroke: silver
			// }}}
			//=== OPENED {{{
			&.opened
				> .title
					> h3
						color: darkslategray
					> button.arrow > svg
						fill: darkslategray
				&.hovered
					> .title
						> h3.h
							color: alpha(darkslategray, 0.8)
						> button.arrow.h > svg
							fill: silver
							stroke: slategray
				&.focused
					> .title
						> h3.f
							color: alpha(darkslateblue, 0.8)
						> button.arrow.f > svg
							fill: slateblue
							stroke: mediumslateblue
			// }}}
			&.active
				> .title
					> h3
						color: slateblue
						filter: brightness(80%)
				> svg
					fill: alpha(slateblue, 0.4)
	// }}}
	// rootBox (first .item)
	> div.item
		display: flex
		flex-direction: column
		padding: 0 6px 0 6px
		> .title // {{{
			height: 3em
			padding: 4px 0 4px 0
			> h3
				font-size: 2em
				font-weight: bold
			> button.arrow
				height: 100%
				min-width: calc(3em - 8px)
				padding: 4px
		// }}}
		> .section // {{{
			padding: 0
		// }}}
		> svg // {{{
			height: 3px
			fill: gainsboro
		// }}}
// }}}
// ===
.sm-blocks.products // {{{
	display: flex
	flex-direction: column // just in case
	align-items: center // grid is centered, not stretched
	width:  100% // eats all width
	height: auto // will grow/shrink automatically
	padding: 1em 0 1em 0
	> div
		// {{{
		// settings
		// configurable
		--columns: 4
		--column-gap: 4px
		--row-gap:    4px
		--item-max-x: 304px
		--item-max-y: 640px
		--item-sz-1: 35
		--item-sz-2: 40
		--item-sz-3: 25
		--font-size: 20px
		--font-size-header: calc(var(--font-size) + 4px)
		// non-configurable
		--rows: 1
		--height: calc(var(--rows) * var(--item-max-y))
		--svg-icon-size: calc(10px + var(--font-size))
		// container setup
		display: grid
		grid-template-columns: repeat(var(--columns), 1fr)
		grid-column-gap: var(--column-gap)
		grid-row-gap: var(--row-gap)
		justify-content: center
		width:  100%
		height: var(--height)
		max-width:  calc(var(--columns) * var(--item-max-x))
		max-height: calc(var(--rows) * var(--item-max-y))
		// }}}
		> .item // vertical {{{
			width:  100%
			height: 100%
			display: flex
			justify-content: center
			> .box
			{
				width:  100%
				height: 100%
				min-width:  0
				min-height: 0
				display: flex
				flex-direction: column
				align-items: stretch
				justify-content: flex-start
				max-width:  var(--item-max-x)
				max-height: var(--item-max-y)
				background-color: gainsboro
				// data is placed into this block,
				// it displays svg placeholder by default
				.ph
				{
					// {{{
					position: relative;
					> *
					{
						position: absolute;
						left: 0;
						top:  0;
						width:  100%;
						height: 100%;
					}
					> div
					{
						display: none;
					}
					> svg
					{
						// scaling mode must be defined in the svg
						// default color is black
					}
					&.loaded
					{
						// state is determined,
						// placeholder must be hidden
						> div
						{
							display: flex;
						}
						> svg
						{
							display: none;
						}
					}
					// }}}
				}
				// item is divided into 3 sections and
				// those sections may also be divided..
				> div
				{
					flex-shrink: 100;
					display: flex;
					flex-direction: column;// always!
					> div
					{
						flex-grow:   100;
						flex-shrink: 100;
						display: flex;
					}
				}
				> .head // image
				{
					flex-grow: var(--item-sz-1);
					> div
					{
						flex-direction: column;
						align-items: stretch;
						justify-content: center;
						> img
						{
							max-width:  100%;
							max-height: 100%;
						}
					}
				}
				> .body
				{
					flex-grow: var(--item-sz-2);
					> .icon // {{{
					{
						// this is intended to be one-liner
						max-height: calc(2 * var(--font-size-header));
						display: flex;
						> .a
						{
							flex: 1 1 30%;
						}
						> .b
						{
							flex: 1 1 70%;
						}
					}
					// }}}
					> .title // {{{
					{
						// This block is fixed at top space it may take.
						// The multiplier to header size should be +1 from
						//  the desired number of lines, the default is 3,
						//  which means that 2 lines will display perfectly fine.
						// The plugin script auto-breaks titles,
						//  this is done via special markers in the block's
						//  content data. Markers are natural, like " | " or " . ",
						//  it will replace it with line break for
						//  the perfect text fit.
						max-height: calc(3 * var(--font-size-header));
						> div, > div > button // TODO: kind of merging should be removed?
						{
							display: flex;
							align-items: center;
							justify-content: center;
							font-weight: bold;
							font-size: var(--font-size-header);// auto-controlled
							line-height: 1;
							text-align: center;
							word-break: keep-all;// +to break-word Asian languages
							overflow: hidden;
						}
					}
					// }}}
					> .features // {{{
					{
					}
					// }}}
				}
				> .foot
				{
					flex-grow: var(--item-sz-3);
					> .price // {{{
					{
						max-height: calc(3 * var(--font-size));
						font-size: var(--font-size-header);
						> div
						{
							flex-direction: column;
							align-items: center;
							justify-content: center;
							> .old
							{
								display: none;
								line-height: 0.65em;
								opacity: 0.7;
								> span
								{
									text-decoration: line-through;
									font-size: 0.65em;
								}
							}
							> .current
							{
								display: flex;
								line-height: 0.9em;
								> .currency
								{
									font-size: 1em;
									padding-right: 0.2em;
								}
								> .value
								{
									font-size: 1em;
									font-weight: bold;
								}
								> .mantissa
								{
									font-size: 0.7em;
									padding-top: 0.1em;
									display: flex;
								}
							}
							// states
							&.none // no price specified
							{
								display: none;
							}
							&.higher // current > old
							{
							}
							&.lower  // current < old
							{
								> .old {display: block;}
							}
							&.right  // currency sign position
							{
								> .current > .currency
								{
									order: 2;
									padding-left: 0.2em;
									padding-right: 0;
								}
							}
						}
					}
					// }}}
					> .controls // {{{
					{
						max-height: calc(3 * var(--font-size));
						> div
						{
							padding-left:  4px;
							padding-right: 4px;
							a, button // buttons
							{
								flex: 1 1 auto;
								display: flex;
								align-items: center;
								justify-content: center;
								padding: 0;
								font-size: var(--font-size);
								font-weight: bold;
								border-width: 0;
								border-style: solid;
								border-color: slategray;
								border-radius: 2px;
								background-color: gainsboro;
								color: black;
								outline: 0;
								cursor: pointer;
								&:focus
								{
									border-width: 1px;
									background-color: silver;
								}
								&:hover
								{
									background-color: silver;
								}
							}
							.cart
							{
								// limited width
								max-width: calc(30px + var(--svg-icon-size));
								> svg
								{
									width: var(--svg-icon-size);
									height: auto;
									fill: black;
								}
								&.none // out of stock
								{
									display: none;
								}
							}
						}
					}
					// }}}
				}
			}
			&.empty // no data
			{
				// in case of instant layout change,
				// element have to take space.
				> .box
				{
					// display a small border
					border-style: solid;
					border-color: gainsboro;
					border-width: 1px;
					//border-right-width:  1px;
					//border-bottom-width: 1px;
					> div
					{
						// don't display anything else
						display: none;
					}
				}
			}
		// }}}
		&.x > .item // horizontal {{{
			> .box
			{
				flex-direction: row;
				max-width:  100%;
				max-height: var(--item-max-x);
				.ph
				{
					max-height: 100%;
				}
				> .image
				{
					max-width:  var(--item-max-x);
					max-height: 100%;
				}
				> .controls
				{
					max-width:  calc(1.5 * var(--item-C));
					max-height: 100%;
				}
			}
		// }}}
		&.v // {{{
			> .item > .box
				background-color: transparent
		// }}}
// }}}
.sm-blocks.paginator // {{{
	// configuration
	--width: calc(1.35 * var(--height))
	// ===
	width:  100%
	height: calc(8px + var(--height))
	padding: 4px 0 4px 0
	display: flex
	flex-direction:  row
	justify-content: center
	> div
		flex: 0 0 auto
		width: auto
		max-width: 10000px
		display: flex
		flex-direction: row
		touch-action: none
		/*===*/
		> .goto // {{{
			flex: 1 1 0
			max-width: calc(2px + var(--width))
			> button
				width:  100%
				height: 100%
				border: 1px solid silver
				border-radius: 2px
				background-color: gainsboro
				box-shadow: inset 0 0 10px 0 silver
				touch-action: none
				&:hover
					border-color: darkslategray
				&:active,
				&:focus
					background-color: silver
					border-color: darkslategray
					box-shadow: inset 0 0 0 1px white
			////
			&.P
				padding-left: 2px
			&.N
				padding-right: 2px
			&.FN.active,
			&.PN.active
				padding-top:    2px
				padding-bottom: 2px
				> button
					background-color: black
					padding: 4px
					> svg
						fill: white
		// }}}
		> .sep // {{{
			flex: 0 0 0
			min-width: 8px
			padding: 2px 0 2px 0
			> svg
				fill: silver
			////
			&.L
				padding-left:  0
			&.R
				padding-right: 0
		// }}}
		> .range // {{{
			////
			--count: 0
			--max-width: calc(2px + (1+var(--count)) * var(--width))
			--page-size: var(--width)
			////
			flex:  1 0 0
			width: 10000px
			max-width: var(--max-width)
			display: flex
			flex-direction:  row
			justify-content: center
			> div
				display: none
			> div.v
				display: block
			////
			> .gap
				flex: 0 100 0
				min-width: calc(0.25 * var(--width))
				padding: 2px 0 2px 0
				> svg
					fill: silver
			////
			> .page
				flex: 0 0 0
				min-width: var(--page-size)
				padding: 2px 1px 2px 1px
				&.F
					padding-left: 0
				&.L
					padding-right: 0
				////
				> button
					display: flex
					align-items: center
					justify-content: center
					width:   100%
					height:  100%
					border-width: 1px
					border-style: solid
					border-color: silver
					border-radius: 2px
					background-color: gainsboro
					box-shadow: inset 0 0 10px 0 silver
					text-decoration: none
					touch-action: none // pointer events only
					&:hover
						font-weight: bolder
						border-color: darkslategray
						color: slategray
					&:active,
					&:focus
						font-weight: bolder
						background-color: silver
						border-color: darkslategray
						color: slategray
						box-shadow: inset 0 0 0 1px white
				// selected page
				&.x
					min-width: calc(2px + var(--page-size))
					padding-top:    2px
					padding-bottom: 2px
					> button
						font-size: 1.4em
						border-color: black
						background-color: black
						cursor: grab
						&:hover
							color: lightslategray
						&:active,
						&:focus
							box-shadow: inset 0 0 1px 1px white
			/*===*
			&.nogap
				// range without gaps
				// reduced size
				--max-width: calc(2px + var(--count) * var(--width))
				// dragging is not possible
				> .page.x > button
					cursor: default
			&.active.drag
				// current page is being dragged
				cursor: grabbing
			/*===*/
		// }}}
		/*===*/
	&.v > div
		/*===*/
		&.flexy // {{{
			width: 100%
			> .range
				width:     100%
				max-width: 100%
				> .gap
					padding: 2px 1px 2px 1px
				&.active > .gap > svg
					fill: silver
				&.nogap > .page
					flex-grow: 1
		// }}}
		&.nosep // {{{
			> .goto
				&.P
					padding-right: 1px
				&.N
					padding-left: 1px
		// }}}
		&.v // {{{
			> .goto > button > svg
				fill: slategray
			> .range
				> .gap > svg
					fill: silver
				> .page
					> button
						color: black
					&.x > button
						color: white
			&.flexy
				> .range > .gap > svg
					fill: gainsboro
				> .range.active > .gap > svg
					fill: silver
			&.hovered
				> .sep > svg
					fill: slategray
		// }}}
		/*===*/
	/**/
// }}}
.sm-blocks.main-section.category-filter // {{{
	////
	.item
		> .title
			> button.checkbox
				flex: 0 0 0
				order: 0
				min-width: 2.2em
				height: 100%
				padding: 0 0.4em 0 0
				> svg
					background-color: alpha(gainsboro, 0.2)
					border: 1px solid slategray
					border-radius: 2px
					fill: transparent
					stroke: transparent
		> .section
			padding: 0 0 0 0.6em
		//===
		&.v
			//=== CLOSED {{{
			&.checked
				> .title > h3
					color: darkslategray
				&.c1 > .title > button.checkbox > svg
					background-color: black
					> .c1
						fill: white
				&.c2 > .title > button.checkbox > svg
					background-color: black
					> .c2
						fill: white
			&.hovered-2
				> .title
					> button.checkbox
						background-color: alpha(lightslategray, 0.04)
						> svg
							background-color: alpha(gainsboro, 0.4)
							border-color: slateblue
					> h3
						color: darkslategray
						background-color: alpha(lightslategray, 0.04)
					> button.arrow
						background-color: transparent
						> svg
							fill: silver
							stroke: slategray
			&.focused-2
				> .title
					> h3
						color: darkslateblue
						background-color: alpha(mediumslateblue, 0.04)
					> button.checkbox
						background-color: alpha(mediumslateblue, 0.04)
						> svg
							box-shadow: inset 0 0 0 1px mediumslateblue
							border-color: darkslateblue
				&.checked
					&.c1 > .title > button.checkbox > svg
						background-color: darkslateblue
					&.c2 > .title > button.checkbox > svg
						background-color: darkslateblue
			// }}}
			//=== OPENED {{{
			&.opened
				> .title
					> h3
						color: darkslategray
					> button.arrow > svg
						fill: darkslategray
				&.hovered-2
					> .title
						> h3
							color: alpha(darkslategray, 0.8)
						> button.arrow > svg
							fill: silver
							stroke: slategray
				&.focused-2
					> .title
						> h3
							color: alpha(darkslateblue, 0.8)
			// }}}
		////
	> .item
		> .section
			padding: 4px 0 4px 0
// }}}
.sm-blocks.price-filter // {{{
	// root
	width:  100%
	height: calc(8px + var(--height))
	padding: 4px 0 4px 0
	// rootBox
	> div
		width:  100%
		height: 100%
		display: flex
		flex-direction: row
		align-items: center
		// text inputs: [left][delimiter][right]
		&.text
			> div // {{{
				position: relative
				flex: 3 1 0
				height: 100%
				display: flex
				flex-direction: row
				align-items: center
				touch-action: none
				> input
					width:  100%
					height: 100%
					font-family: WebSafeFontMono
					font-size:   1.2em
					font-weight: bold
					padding: 0.6em 0 0.3em 0
					background-color: gainsboro
					border: 1px solid silver
					border-radius: 2px
					box-shadow: inset 0 0 10px 0 silver
					touch-action: none
				> label
					position:  absolute
					top:       0
					width:     100%
					font-family: WebSafeFontSans
					font-size:   0.8em
					font-weight: bold
					padding: 0.2em 0 0 0
					background-color: transparent
					color: slategray
					user-select: none
					cursor: text
				&.L
					> input
						border-right-width: 0
						border-top-right-radius: 0
						border-bottom-right-radius: 0
						padding-right: 0.6em
						text-align: right
					> label
						padding-right: 0.4em
						text-align: right
				&.R
					> input
						border-left-width: 0
						border-top-left-radius: 0
						border-bottom-left-radius: 0
						padding-left: 0.6em
						text-align: left
					> label
						padding-left: 0.4em
						text-align: left
			// }}}
			> svg // {{{
				flex: 1 3 0
				height: var(--height)
				max-width: 48px
				fill: silver
				touch-action: none
				> .L
					fill: darkgray
				> .X
					fill: transparent
				> .R
					fill: darkgray
			// }}}
			&.v // {{{
				> svg
					//cursor: ew-resize
					> .X
						cursor: pointer
						fill: lightgray
				> div
					> input
						color: darkslategray
						&::selection
							background-color: darkslateblue
							color: gainsboro
					&.hovered
						> input
							border-color: gray
							box-shadow: inset 0 0 0 2px silver
					&.hovered:not(.focused)
						> input,
						> label
							cursor: ns-resize
					&.focused
						> input
							color: black
							background-color: alpha(gainsboro, 0.6)
							border-color: gray
							box-shadow: inset 0 0 0 2px silver
						> label
							cursor: pointer
							&:hover
								color: slateblue
					&.locked
						> input
							color: darkslategray
							background-color: gainsboro
							border-color: silver
							&::selection
								background-color: darkslategray
								color: gainsboro
				////
				&.hovered
					> svg > .X
						fill: slategray
				&.h0 > svg > .L
					fill: slategray
					transform: translateX(1px)
				&.h1 > svg > .R
					fill: slategray
					transform: translateX(-1px)
				&.f0,&.f1
					> svg > .X
						fill: slategray
				&.f0 > svg > .L
					fill: slateblue
					transform: translateX(1px)
				&.f1 > svg > .R
					fill: slateblue
					transform: translateX(-1px)
				&.active
					> svg
						filter: brightness(110%)
						> .X
							fill: slateblue
			// }}}
	// end
// }}}
.sm-blocks.orderer // {{{
	// container
	width:  100%
	height: calc(8px + var(--height))
	padding: 4px 0 4px 0
	// content
	> div
		width:  100%
		height: 100%
		> .variant // {{{
			position: absolute
			width:  auto
			height: 100%
			opacity: 0
			&.left
				top:  0
				left: 0
				padding-top:    4px
				padding-bottom: 4px
				padding-left:   1px
				padding-right:  0
			&.right
				top:   0
				right: 0
				padding-top:    4px
				padding-bottom: 4px
				padding-left:   0
				padding-right:  1px
			&.a
				pointer-events: none
				&.left > button > svg
					transform: rotate(-90deg)
				&.right > button > svg
					transform: rotate(90deg)
			&.b
				> button > svg
					transform: rotate(0deg)
			&.c
				&.left > button > svg
					transform: rotate(-180deg)
				&.right > button > svg
					transform: rotate(180deg)
			////
			> button
				width:  var(--height)
				height: 100%
				background-color: transparent
				padding-left:  4px
				padding-right: 4px
				> svg
					display: block
					width:  100%
					height: 100%
					stroke-width: 1
					fill: slategray
					stroke: darkslategray
				&:hover,
				&:active,
				&:focus
					> svg
						fill: black
						stroke: slategray
		// }}}
		> select // {{{
			-webkit-appearance: none
			-moz-appearance: none
			appearance: none
			display: block
			width:  100%
			height: 100%
			font-weight: bold
			text-align: left
			text-overflow: ellipsis
			white-space: nowrap
			overflow: hidden
			border: 1px solid silver
			border-radius: 2px
			background-color: gainsboro
			color: transparent
			box-shadow: inset 0 0 10px 0 silver
			outline: none
			cursor: pointer
			&.left
				padding-left:  calc(2px + var(--height))
				padding-right: var(--font-size)
			&.right
				padding-left:  var(--font-size)
				padding-right: calc(2px + var(--height))
			&.left.right
				padding-left:  calc(2px + var(--height))
				text-align: center
			////
			> option
				font-weight: bold
				background-color: gainsboro
				&:checked
					color: silver
				&:hover
					background-color: black
					color: white
			////
			&:hover
				color black
			&:focus
				color: black
				background-color: silver
				border-color: darkslategray
				box-shadow: inset 0 0 0 1px white
			&:-ms-expand
				display: none
			/***
			&:disabled
				color: graytext
				background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22graytext%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),
					linear-gradient(to bottom, #ffffff 0%,#e5e5e5 100%)
				&:hover
					border-color: #aaa
			/***/
		// }}}
		&.v // {{{
			> .variant
				opacity: 1
			> select
				color: darkslategray
			&.hovered > select
				border-color: darkslategray
		// }}}
// }}}
